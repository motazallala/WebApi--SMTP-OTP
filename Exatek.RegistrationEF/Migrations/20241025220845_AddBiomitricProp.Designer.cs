// <auto-generated />
using Exatek.RegistrationEF.AppData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exatek.RegistrationEF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241025220845_AddBiomitricProp")]
    partial class AddBiomitricProp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Exatek.RegistrationCore.Model.Customer", b =>
                {
                    b.Property<string>("ICNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("EmailVerify")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("PhoneVerify")
                        .HasColumnType("bit");

                    b.Property<bool>("Policy")
                        .HasColumnType("bit");

                    b.Property<bool>("biometric")
                        .HasColumnType("bit");

                    b.HasKey("ICNumber");

                    b.ToTable("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
